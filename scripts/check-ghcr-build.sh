#!/bin/bash

# üîç GHCR Build Status Checker f√ºr DSGVO-Open WebUI
# √úberpr√ºft den Status des automatischen Builds

echo "üöÄ GHCR Build Status Checker"
echo "=============================="

# Variablen
REPO="Daerkle/oidsgvo"
REGISTRY="ghcr.io"
IMAGE_NAME="daerkle/oidsgvo"

echo ""
echo "üìã Repository: $REPO"
echo "üì¶ Registry: $REGISTRY"
echo "üè∑Ô∏è Image: $IMAGE_NAME"
echo ""

# GitHub Actions Status pr√ºfen (ben√∂tigt gh CLI)
if command -v gh &> /dev/null; then
    echo "üîÑ GitHub Actions Status:"
    gh run list --repo=$REPO --workflow="Build and Push DSGVO-konforme Open WebUI to GHCR" --limit=5
    echo ""
else
    echo "‚ö†Ô∏è GitHub CLI nicht installiert. Installiere mit: brew install gh"
    echo "üåê Manuell pr√ºfen: https://github.com/$REPO/actions"
    echo ""
fi

# Docker Image verf√ºgbarkeit pr√ºfen
echo "üê≥ Pr√ºfe verf√ºgbare Docker Images..."
echo ""

# Verf√ºgbare Tags pr√ºfen
TAGS=("latest" "dsgvo-compliant" "master")

for tag in "${TAGS[@]}"; do
    echo -n "üìå $IMAGE_NAME:$tag - "
    
    if docker manifest inspect $REGISTRY/$IMAGE_NAME:$tag &> /dev/null; then
        echo "‚úÖ Verf√ºgbar"
        
        # Image-Details abrufen
        SIZE=$(docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}" | grep "$IMAGE_NAME" | grep "$tag" | awk '{print $3}' 2>/dev/null || echo "Unknown")
        if [ "$SIZE" != "Unknown" ] && [ "$SIZE" != "" ]; then
            echo "   üìä Gr√∂√üe: $SIZE"
        fi
        
        # Erstellungsdatum
        CREATED=$(docker inspect $REGISTRY/$IMAGE_NAME:$tag --format='{{.Created}}' 2>/dev/null | cut -d'T' -f1 || echo "Unknown")
        if [ "$CREATED" != "Unknown" ] && [ "$CREATED" != "" ]; then
            echo "   üìÖ Erstellt: $CREATED"
        fi
        
    else
        echo "‚ùå Nicht verf√ºgbar"
    fi
    echo ""
done

# Plattform-Support pr√ºfen
echo "üñ•Ô∏è Multi-Platform Support:"
if docker manifest inspect $REGISTRY/$IMAGE_NAME:latest &> /dev/null; then
    docker manifest inspect $REGISTRY/$IMAGE_NAME:latest | jq -r '.manifests[] | "   üèóÔ∏è " + .platform.architecture + "/" + .platform.os' 2>/dev/null || echo "   ‚ÑπÔ∏è jq nicht installiert f√ºr Details"
else
    echo "   ‚ùå Image nicht verf√ºgbar f√ºr Plattform-Check"
fi
echo ""

# Deployment-Befehle
echo "üöÄ Deployment-Befehle:"
echo ""
echo "# Schnellstart:"
echo "docker run -d --name oidsgvo -p 3000:8080 \\"
echo "  -e ENABLE_ADMIN_EXPORT=false \\"
echo "  -e ENABLE_ADMIN_CHAT_ACCESS=false \\"
echo "  $REGISTRY/$IMAGE_NAME:latest"
echo ""
echo "# Mit Docker Compose:"
echo "curl -O https://raw.githubusercontent.com/$REPO/master/docker-compose.ghcr.yaml"
echo "docker-compose -f docker-compose.ghcr.yaml up -d"
echo ""

# N√ºtzliche Links
echo "üîó N√ºtzliche Links:"
echo "‚Ä¢ GitHub Repo: https://github.com/$REPO"
echo "‚Ä¢ GitHub Actions: https://github.com/$REPO/actions"
echo "‚Ä¢ GHCR Package: https://github.com/$REPO/pkgs/container/oidsgvo"
echo "‚Ä¢ Pull Commands: docker pull $REGISTRY/$IMAGE_NAME:latest"
echo ""

echo "‚úÖ Check abgeschlossen!"